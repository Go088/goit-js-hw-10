{"version":3,"file":"commonHelpers.js","sources":["../src/js/01-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst input = document.querySelector(\"#datetime-picker\");\nconst button = document.querySelector(\"[data-start]\");\nconst timerFieldDays = document.querySelector(\"[data-days]\");\nconst timerFieldHours = document.querySelector(\"[data-hours]\");\nconst timerFieldMinutes = document.querySelector(\"[data-minutes]\");\nconst timerFieldSeconds = document.querySelector(\"[data-seconds]\");\n\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      iziToast.show({\n        title: 'Hey',\n        message: 'What would you like to add?'\n});\n      button.setAttribute(\"disabled\", true); return\n    } else {\n        button.removeAttribute(\"disabled\");\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst datePicker = flatpickr(input, options);\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, 0);\n}\n\nfunction onTimerStart() {\n  const selectedDate = datePicker.selectedDates[0];\n\n  userSelectedDate = setInterval(() => {\n    const countdown = selectedDate - new Date();\n    if (countdown < 0) {\n      clearInterval(userSelectedDate);\n      return;\n    }\n    updateTimerFace(convertMs(countdown));\n  }, 1000);\n}\n\nfunction updateTimerFace({ days, hours, minutes, seconds }) {\n  timerFieldDays.textContent = addLeadingZero(days);\n  timerFieldHours.textContent = addLeadingZero(hours);\n  timerFieldMinutes.textContent = addLeadingZero(minutes);\n  timerFieldSeconds.textContent = addLeadingZero(seconds);\n}\nbutton.addEventListener(\"click\", onTimerStart);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["input","button","timerFieldDays","timerFieldHours","timerFieldMinutes","timerFieldSeconds","userSelectedDate","options","selectedDates","iziToast","convertMs","ms","days","hours","minutes","seconds","datePicker","flatpickr","addLeadingZero","value","onTimerStart","selectedDate","countdown","updateTimerFace"],"mappings":"+IAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAiB,SAAS,cAAc,aAAa,EACrDC,EAAkB,SAAS,cAAc,cAAc,EACvDC,EAAoB,SAAS,cAAc,gBAAgB,EAC3DC,EAAoB,SAAS,cAAc,gBAAgB,EAEjE,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,GAAK,IAAI,KAAQ,CACjCC,EAAS,KAAK,CACZ,MAAO,MACP,QAAS,6BACjB,CAAC,EACKR,EAAO,aAAa,WAAY,EAAI,EAAG,MAC7C,MACQA,EAAO,gBAAgB,UAAU,CAEtC,CACH,EAEA,SAASS,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAaC,EAAUjB,EAAOO,CAAO,EAE3C,SAASW,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,CAAC,CACpC,CAEA,SAASC,GAAe,CACtB,MAAMC,EAAeL,EAAW,cAAc,GAE9CV,EAAmB,YAAY,IAAM,CACnC,MAAMgB,EAAYD,EAAe,IAAI,KACrC,GAAIC,EAAY,EAAG,CACjB,cAAchB,CAAgB,EAC9B,MACD,CACDiB,EAAgBb,EAAUY,CAAS,CAAC,CACrC,EAAE,GAAI,CACT,CAEA,SAASC,EAAgB,CAAE,KAAAX,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1Db,EAAe,YAAcgB,EAAeN,CAAI,EAChDT,EAAgB,YAAce,EAAeL,CAAK,EAClDT,EAAkB,YAAcc,EAAeJ,CAAO,EACtDT,EAAkB,YAAca,EAAeH,CAAO,CACxD,CACAd,EAAO,iBAAiB,QAASmB,CAAY"}